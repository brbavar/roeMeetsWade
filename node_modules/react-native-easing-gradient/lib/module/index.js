import { Easing } from 'react-native';
import { createInterpolation } from './create-interpolation';
const easeInOut = Easing.bezier(0.42, 0, 0.58, 1);

function easeGradient({
  colorStops,
  easing = easeInOut,
  extraColorStopsPerTransition = 12
}) {
  const colors = [];
  const locations = [];
  const initialLocations = Object.keys(colorStops).map(key => Number(key)).sort();
  const totalColorStops = initialLocations.length;

  for (let currentStopIndex = 0; currentStopIndex < totalColorStops - 1; currentStopIndex++) {
    var _colorStops$startLoca;

    const startLocation = initialLocations[currentStopIndex];
    const endLocation = initialLocations[currentStopIndex + 1];
    const startColor = colorStops[startLocation].color;
    const endColor = colorStops[endLocation].color;
    const currentEasing = (_colorStops$startLoca = colorStops[startLocation].easing) !== null && _colorStops$startLoca !== void 0 ? _colorStops$startLoca : easing;
    const colorScale = createInterpolation({
      inputRange: [0, 1],
      outputRange: [startColor, endColor],
      easing: currentEasing
    });
    const currentTransitionLength = endLocation - startLocation;
    const stepSize = 1 / (extraColorStopsPerTransition + 1);

    for (let stepIndex = 0; stepIndex <= extraColorStopsPerTransition + 1; stepIndex++) {
      const progress = stepIndex * stepSize;
      const color = colorScale(progress);
      colors.push(color);
      locations.push(startLocation + currentTransitionLength * progress);
    }
  }

  return {
    colors,
    locations
  };
}

export { easeGradient };
//# sourceMappingURL=index.js.map